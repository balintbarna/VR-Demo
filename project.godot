; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "SpatialManipulator",
"class": "ArvrBodyManipulator",
"language": "GDScript",
"path": "res://addons/xr-helpers/other/ArvrManipulator.gd"
}, {
"base": "ARVROrigin",
"class": "ArvrOriginWithReferences",
"language": "GDScript",
"path": "res://addons/xr-helpers/other/ArvrOriginWithReferences.gd"
}, {
"base": "Resource",
"class": "BaseMapping",
"language": "GDScript",
"path": "res://addons/xr-helpers/other/BaseMapping.gd"
}, {
"base": "Reference",
"class": "ExtraMath",
"language": "GDScript",
"path": "res://addons/extra_math_gd/ExtraMath.gd"
}, {
"base": "KinematicBodyManipulator",
"class": "FlatWorldPhysicsKinematicMover",
"language": "GDScript",
"path": "res://addons/xr-helpers/features/FlatWorldPhysicsKinematicMover.gd"
}, {
"base": "SpatialManipulator",
"class": "FreeLookKinematicMover",
"language": "GDScript",
"path": "res://addons/xr-helpers/features/FreeLookKinematicMover.gd"
}, {
"base": "Spatial",
"class": "GrabHandler",
"language": "GDScript",
"path": "res://general/grabbing/GrabHandler.gd"
}, {
"base": "Spatial",
"class": "GrabPointsGenerator",
"language": "GDScript",
"path": "res://general/grabbing/GrabPointsGenerator.gd"
}, {
"base": "ARVRCamera",
"class": "HeadCamera",
"language": "GDScript",
"path": "res://player/vr-head/HeadCamera.gd"
}, {
"base": "GrabHandler",
"class": "JoyGrabHandler",
"language": "GDScript",
"path": "res://general/joys/JoyGrabHandler.gd"
}, {
"base": "Resource",
"class": "Joypad",
"language": "GDScript",
"path": "res://player/vr-controllers/Joypad.gd"
}, {
"base": "Spatial",
"class": "KinematicBodyManipulator",
"language": "GDScript",
"path": "res://addons/xr-helpers/other/KinematicBodyManipulator.gd"
}, {
"base": "Object",
"class": "NodeUtilities",
"language": "GDScript",
"path": "res://general/NodeUtilities.gd"
}, {
"base": "Resource",
"class": "NumericAngularDerivator",
"language": "GDScript",
"path": "res://general/NumericAngularDerivator.gd"
}, {
"base": "Resource",
"class": "NumericDerivator",
"language": "GDScript",
"path": "res://general/NumericDerivator.gd"
}, {
"base": "OculusTracker",
"class": "OculusHandTracker",
"language": "GDScript",
"path": "res://addons/godot_ovrmobile/example_scenes/oculus_hand_tracker.gd"
}, {
"base": "Reference",
"class": "OculusMobileConfig",
"language": "GDScript",
"path": "res://vr-intergration/OculusMobileConfig.gd"
}, {
"base": "BaseMapping",
"class": "OculusMobileInputMapping",
"language": "GDScript",
"path": "res://vr-intergration/OculusMobileInputMapping.gd"
}, {
"base": "OculusTracker",
"class": "OculusTouchController",
"language": "GDScript",
"path": "res://addons/godot_ovrmobile/example_scenes/oculus_touch_controller.gd"
}, {
"base": "ARVRController",
"class": "OculusTracker",
"language": "GDScript",
"path": "res://addons/godot_ovrmobile/example_scenes/oculus_tracker.gd"
}, {
"base": "Reference",
"class": "OpenXrConfig",
"language": "GDScript",
"path": "res://vr-intergration/OpenXrConfig.gd"
}, {
"base": "BaseMapping",
"class": "OpenXrInputMapping",
"language": "GDScript",
"path": "res://vr-intergration/OpenXrInputMapping.gd"
}, {
"base": "SpatialManipulator",
"class": "PullTransform",
"language": "GDScript",
"path": "res://general/PullTransform.gd"
}, {
"base": "SpatialManipulator",
"class": "ReferenceOffsetCompensatingRotator",
"language": "GDScript",
"path": "res://addons/xr-helpers/features/ReferenceOffsetCompensatingRotator.gd"
}, {
"base": "GrabHandler",
"class": "RigidBodyGrabHandler",
"language": "GDScript",
"path": "res://general/grabbing/RigidBodyGrabHandler.gd"
}, {
"base": "Spatial",
"class": "SpatialManipulator",
"language": "GDScript",
"path": "res://addons/xr-helpers/other/SpatialManipulator.gd"
}, {
"base": "Node",
"class": "TouchHandler",
"language": "GDScript",
"path": "res://general/touch/TouchHandler.gd"
}, {
"base": "ColorRect",
"class": "TouchRipple",
"language": "GDScript",
"path": "res://general/touch/TouchRipple.gd"
}, {
"base": "ArvrBodyManipulator",
"class": "TripleMethodOrientationGuesser",
"language": "GDScript",
"path": "res://player/helpers/TripleMethodOrientationGuesser.gd"
}, {
"base": "ARVRController",
"class": "VrController",
"language": "GDScript",
"path": "res://player/vr-controllers/VrController.gd"
}, {
"base": "ArvrBodyManipulator",
"class": "VrFrameHeightScaler",
"language": "GDScript",
"path": "res://player/helpers/VrFrameHeightScaler.gd"
} ]
_global_script_class_icons={
"ArvrBodyManipulator": "",
"ArvrOriginWithReferences": "",
"BaseMapping": "",
"ExtraMath": "",
"FlatWorldPhysicsKinematicMover": "",
"FreeLookKinematicMover": "",
"GrabHandler": "",
"GrabPointsGenerator": "",
"HeadCamera": "",
"JoyGrabHandler": "",
"Joypad": "",
"KinematicBodyManipulator": "",
"NodeUtilities": "",
"NumericAngularDerivator": "",
"NumericDerivator": "",
"OculusHandTracker": "",
"OculusMobileConfig": "",
"OculusMobileInputMapping": "",
"OculusTouchController": "",
"OculusTracker": "",
"OpenXrConfig": "",
"OpenXrInputMapping": "",
"PullTransform": "",
"ReferenceOffsetCompensatingRotator": "",
"RigidBodyGrabHandler": "",
"SpatialManipulator": "",
"TouchHandler": "",
"TouchRipple": "",
"TripleMethodOrientationGuesser": "",
"VrController": "",
"VrFrameHeightScaler": ""
}

[application]

config/name="VR-Demo"
run/main_scene="res://Startup.tscn"
config/icon="res://icon.png"

[autoload]

Globals="*res://general/Globals.gd"
SceneLibrary="*res://general/SceneLibrary.gd"
SceneLoader="*res://general/SceneLoader.gd"
InputMapper="*res://addons/xr-helpers/autoload/InputMapper.gd"

[debug]

gdscript/completion/autocomplete_setters_and_getters=true
gdscript/warnings/unused_class_variable=true
gdscript/warnings/unsafe_property_access=true
gdscript/warnings/unsafe_method_access=true
gdscript/warnings/unsafe_cast=true
gdscript/warnings/unsafe_call_argument=true

[editor_plugins]

enabled=PoolStringArray( "res://addons/gut/plugin.cfg" )

[gdnative]

singletons=[ "res://addons/godot-openxr/config/godot_openxr.gdnlib", "res://addons/godot_ovrmobile/godot_ovrmobile.gdnlib" ]

[input]

movement_sprint={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":16777237,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
movement_jump={
"deadzone": 0.5,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":32,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
movement_forward={
"deadzone": 0.1,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":87,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
movement_back={
"deadzone": 0.1,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":83,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
movement_left={
"deadzone": 0.1,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":65,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
movement_right={
"deadzone": 0.1,
"events": [ Object(InputEventKey,"resource_local_to_scene":false,"resource_name":"","device":0,"alt":false,"shift":false,"control":false,"meta":false,"command":false,"pressed":false,"scancode":68,"physical_scancode":0,"unicode":0,"echo":false,"script":null)
 ]
}
yaw_left={
"deadzone": 0.1,
"events": [  ]
}
yaw_right={
"deadzone": 0.1,
"events": [  ]
}
pitch_up={
"deadzone": 0.5,
"events": [  ]
}
pitch_down={
"deadzone": 0.5,
"events": [  ]
}

[input_devices]

pointing/emulate_mouse_from_touch=false

[physics]

common/physics_fps=120
common/enable_pause_aware_picking=true
3d/physics_engine="GodotPhysics"
3d/active_soft_world=false

[rendering]

quality/driver/driver_name="GLES2"
vram_compression/import_etc=true
quality/shading/force_vertex_shading.mobile=false
quality/shading/use_physical_light_attenuation=true
environment/default_environment="res://general/default_env.tres"
